shiny::runApp('Desktop/air_quality/shiny')
library(SPARQL) ; library(XML) ; library(plyr) ; library(sp) ; library(sf) ; library(leaflet)
endpoint <- "http://data.ordnancesurvey.co.uk/datasets/os-linked-data/apis/sparql"
query <- paste0(
"PREFIX geom: <http://data.ordnancesurvey.co.uk/ontology/geometry/>
PREFIX geog: <http://data.ordnancesurvey.co.uk/ontology/admingeo/>
PREFIX skos: <http://www.w3.org/2004/02/skos/core#>
SELECT ?DistrictWardName ?gssCode ?uri ?g
WHERE
{
?uri a geog:DistrictWard;
skos:prefLabel ?DistrictWardName;
geog:gssCode ?gssCode;
geom:extent ?geom .
?geom geom:asGML ?g.
}
HAVING(?DistrictWardName=\"Clifford\")")
qd <- SPARQL(endpoint,query)$results
BNG <- "+proj=tmerc +lat_0=49 +lon_0=-2 +k=0.9996012717 +x_0=400000 +y_0=-100000 +ellps=airy +datum=OSGB36 +units=m +no_defs"
# extract data to attach to SpatialPolygonDataFrame later
data <- qd[,!(colnames(qd) == "g")]
# extract geometry part of results
geom <- qd[,"g"]
# use various gsub and split functions to create a dataframe of X and Y
geom.sub <- sub(".*<gml:coordinates> *(.*?) *</gml:coordinates>.*", "\\1", geom)
s <- strsplit(as.character(geom.sub), ' ')
coords <- data.frame(coords=unlist(s))
coords[] <- lapply(coords, as.character)
l <- strsplit(coords$coords, ",")
df <- ldply(l)
colnames(df) <- c("x", "y")
df[] <- lapply(df, as.numeric)
# create Polygon(s)
geom.list <- Polygons(list(Polygon(df)),1)
final <- SpatialPolygons(list(geom.list),proj4string=CRS(BNG))
final.df <- SpatialPolygonsDataFrame(final,data)
final.df <- st_as_sf(final.df) %>% st_transform(crs = 4326)
# plot
leaflet(final.df) %>%
addTiles(urlTemplate = "http://{s}.tiles.wmflabs.org/bw-mapnik/{z}/{x}/{y}.png",
attribution = '&copy; <a href="http://www.openstreetmap.org/copyright">OpenStreetMap</a>, <a href="https://www.ons.gov.uk/methodology/geography/licences">Contains OS data Â© Crown copyright and database right (2017)</a>') %>%
addPolygons(fillColor = "orange", weight = 1, opacity = 1, color = "black", label = ~as.character(DistrictWardName))
query <- paste0(
"PREFIX geom: <http://data.ordnancesurvey.co.uk/ontology/geometry/>
PREFIX geog: <http://data.ordnancesurvey.co.uk/ontology/admingeo/>
PREFIX skos: <http://www.w3.org/2004/02/skos/core#>
SELECT ?DistrictWardName ?gssCode ?uri ?g
WHERE
{
?uri a geog:DistrictWard;
skos:prefLabel ?DistrictWardName;
geog:gssCode ?gssCode;
geom:extent ?geom .
?geom geom:asKML ?g.
}
HAVING(?DistrictWardName=\"Clifford\")")
qd <- SPARQL(endpoint,query)$results
library(sf)
sf <- st_read("https://ons-inspire.esriuk.com/arcgis/rest/services/Administrative_Boundaries/Local_Authority_Districts_December_2017_Boundaries/MapServer/3/query?where=lad17cd=%27E08000009%27&outFields=*&outSR=4326&f=geojson")
plot(st_geometry(sf))
dataset <- "Administrative_Boundaries/Local_Authority_Districts_December_2017_Boundaries"
area_type <- "lad17cd"
code <- "E08000009"
sf <- st_read("https://ons-inspire.esriuk.com/arcgis/rest/services/Administrative_Boundaries/", dataset, "/MapServer/3/query?where=", area_type "=%27", code "%27&outFields=*&outSR=4326&f=geojson")
sf <- st_read("https://ons-inspire.esriuk.com/arcgis/rest/services/Administrative_Boundaries/", dataset, "/MapServer/3/query?where=", area_type "=%27", code, "%27&outFields=*&outSR=4326&f=geojson")
sf <- st_read("https://ons-inspire.esriuk.com/arcgis/rest/services/", dataset, "/MapServer/3/query?where=", area_type "=%27", code, "%27&outFields=*&outSR=4326&f=geojson")
dataset <- "Administrative_Boundaries/Local_Authority_Districts_December_2017_Boundaries"
area_type <- "lad17cd"
area_code <- "E08000009"
sf <- st_read("https://ons-inspire.esriuk.com/arcgis/rest/services/", dataset, "/MapServer/1/query?where=", area_type, "=%27", area_code, "%27&outFields=*&outSR=4326&f=geojson")
sf <- st_read(paste0("https://ons-inspire.esriuk.com/arcgis/rest/services/", dataset, "/MapServer/1/query?where=", area_type, "=%27", area_code, "%27&outFields=*&outSR=4326&f=geojson"))
plot(st_geometry(sf))
area_code <- "E08000001"
sf <- st_read(paste0("https://ons-inspire.esriuk.com/arcgis/rest/services/", dataset, "/MapServer/1/query?where=", area_type, "=%27", area_code, "%27&outFields=*&outSR=4326&f=geojson"))
plot(st_geometry(sf))
area_code <- c("E08000001", "E08000002")
sf <- st_read(paste0("https://ons-inspire.esriuk.com/arcgis/rest/services/", dataset, "/MapServer/1/query?where=", area_type, "=%27", area_code, "%27&outFields=*&outSR=4326&f=geojson"))
plot(st_geometry(sf))
area_code <- c("E08000001", "E08000002")
sf <- st_read(paste0("https://ons-inspire.esriuk.com/arcgis/rest/services/", dataset, "/MapServer/1/query?where=", area_type, "=%27", area_code, "%27&outFields=*&outSR=4326&f=geojson"))
plot(st_geometry(sf))
area_code <- "E08000002"
sf <- st_read(paste0("https://ons-inspire.esriuk.com/arcgis/rest/services/", dataset, "/MapServer/1/query?where=", area_type, "=%27", area_code, "%27&outFields=*&outSR=4326&f=geojson"))
plot(st_geometry(sf))
sf < st_read("https%3A%2F%2Fons-inspire.esriuk.com%2Farcgis%2Frest%2Fservices%2FAdministrative_Boundaries%2FWards_December_2016_Boundaries%2FMapServer%2F0%2Fquery%3Fwhere%3Dwd16cd%3D%27E08000001%27%3A%27E08000002%27%26outFields%3D*%26outSR%3D4326%26f%3Dgeojson")
sf < st_read("https%3A%2F%2Fons-inspire.esriuk.com%2Farcgis%2Frest%2Fservices%2FAdministrative_Boundaries%2FLocal_Authority_Districts_December_2017_Boundaries%2FMapServer%2F0%2Fquery%3Fwhere%3Dlad17cd%3D%27E08000001%27%3A%27E08000002%27%26outFields%3D*%26outSR%3D4326%26f%3Dgeojson")
sf <- st_read(paste0("https://ons-inspire.esriuk.com/arcgis/rest/services/", dataset, "/MapServer/1/query?where=E08000002=%27", area_code, "%27&outFields=*&outSR=4326&f=geojson"))
sf <- st_read(paste0("https://ons-inspire.esriuk.com/arcgis/rest/services/", dataset, "/MapServer/1/query?where=", area_type, "=%27E08000002%27&outFields=*&outSR=4326&f=geojson"))
plot(st_geometry(sf))
sf <- st_read(paste0("https://ons-inspire.esriuk.com/arcgis/rest/services/", dataset, "/MapServer/1/query?where=", area_type, "=%27E08000001...E08000002%27&outFields=*&outSR=4326&f=geojson"))
plot(st_geometry(sf))
library(SPARQL) # SPARQL querying package
library(ggplot2)
endpoint <- "https://query.wikidata.org/sparql"
query <- 'SELECT ?item ?itemLabel\nWHERE\n{\n  ?item wdt:P31 wd:Q144\n  SERVICE wikibase:label {bd:serviceParam wikibase:language "{AUTO_LANGUAGE, en"}.\n  }'
qd <- SPARQL(endpoint,query)
df <- qd$results
View(df)
install.packages("devtools")
seq(as.Date('2011-01-01'),as.Date('2011-01-31'),by = 1)
seq(as.Date('2018-12-03'), as.Date('2018-12-07'),by = 1)
df <- data_frame(
date = c(seq(as.Date('2018-12-03'), as.Date('2018-12-07'), by = 1),
seq(as.Date('2018-12-10'), as.Date('2018-12-14'), by = 1),
seq(as.Date('2018-12-17'), as.Date('2018-12-21'), by = 1)),
visits = 1:15,
topic = 1:15
)
library(tidyverse)
df <- data_frame(
date = c(seq(as.Date('2018-12-03'), as.Date('2018-12-07'), by = 1),
seq(as.Date('2018-12-10'), as.Date('2018-12-14'), by = 1),
seq(as.Date('2018-12-17'), as.Date('2018-12-21'), by = 1)),
visits = 1:15,
topic = 1:15
)
df
df <- data_frame(
date = c(seq(as.Date('2018-12-03'), as.Date('2018-12-03'), by = 1)),
visits = c(246, 100, 60),
topic = 1:3
)
df
ggplot(df, aes(date, visits)) +
geom_col()
df <- data_frame(
date = c(seq(as.Date('2018-12-03'), as.Date('2018-12-05'), by = 1)),
visits = c(246, 100, 60),
topic = c("Search within a website using Google",
"Dodgy charts",
"Keyboard shortcuts")
)
ggplot(df, aes(date, visits)) +
geom_col()
df <- data_frame(
date = c(seq(as.Date('2018-12-03'), as.Date('2018-12-05'), by = 1)),
reads = c(246, 100, 60),
topic = c("Search within a website using Google",
"Dodgy charts",
"Keyboard shortcuts")
)
ggplot(df, aes(date, reads)) +
geom_col() +
labs(title = "Traffic to the Lab's Digital Literacy tips",
x = NULL, y = "Visits") +
theme_minimal()
library(tidyverse) ; library(ggiraph)
ggplot(df, aes(date, reads)) +
geom_bar_interactive(aes(tooltip = topic), size = 2) +
labs(title = "Traffic to the Lab's Digital Literacy tips",
x = NULL, y = "Visits") +
theme_minimal()
library(tidyverse) ; library(ggiraph)
df <- data_frame(
date = c(seq(as.Date('2018-12-03'), as.Date('2018-12-05'), by = 1)),
reads = c(246, 100, 60),
topic = c("Search within a website using Google",
"Dodgy charts",
"Keyboard shortcuts")
)
ggplot(df, aes(date, reads)) +
geom_bar_interactive(aes(tooltip = topic), size = 2) +
labs(title = "Traffic to the Lab's Digital Literacy tips",
x = NULL, y = "Visits") +
theme_minimal()
ggplot(df, aes(x = date, tooltip = topic,
data_id = topic ) ) +
geom_bar_interactive()
ggplot(df, aes(x = date, y = reads, tooltip = topic,
data_id = topic ) ) +
geom_bar_interactive()
ggplot(df, aes(x = date, y = reads, tooltip = topic,
data_id = date ) ) +
geom_bar_interactive(stat = "identity")
plot <- ggplot(df, aes(x = date, y = reads, tooltip = topic,
data_id = date ) ) +
geom_bar_interactive(stat = "identity")
ggiraph(code = print(plot))
plot <- ggplot(df, aes(x = date, y = reads, tooltip = topic,
data_id = date ) ) +
geom_bar_interactive(stat = "identity")
ggiraph(code = print(plot))
g <- ggplot(df, aes(x = date, y = reads, tooltip = topic,
data_id = date ) ) +
geom_bar_interactive(stat = "identity")
ggiraph(code = print(g))
df <- data.frame(
date = c(seq(as.Date('2018-12-03'), as.Date('2018-12-05'), by = 1)),
reads = c(246, 100, 60),
topic = c("Search within a website using Google",
"Dodgy charts",
"Keyboard shortcuts")
)
df
glimpse(df)
g <- ggplot(df, aes(x = date, y = reads, tooltip = topic,
data_id = date ) ) +
geom_bar_interactive(stat = "identity")
ggiraph(code = print(g))
df <- data.frame(
date = c(seq(as.Date('2018-12-03'), as.Date('2018-12-05'), by = 1)),
reads = c(246, 100, 60),
topic = c("Search within a website using Google",
"Dodgy charts",
"Keyboard shortcuts"),
stringsAsFactors = FALSE
)
glimpse(df)
g <- ggplot(df, aes(x = date, y = reads, tooltip = topic,
data_id = date ) ) +
geom_bar_interactive(stat = "identity")
ggiraph(code = print(g))
df <- data_frame(
date = c(seq(as.Date('2018-12-03'), as.Date('2018-12-05'), by = 1)),
reads = as.integer(c(246, 100, 60)),
topic = c("Search within a website using Google",
"Dodgy charts",
"Keyboard shortcuts")
)
glimpse(df)
g <- ggplot(df, aes(x = date, y = reads, tooltip = topic,
data_id = date ) ) +
geom_bar_interactive(stat = "identity")
ggiraph(code = print(g))
g <- ggplot(df, aes(x = date, y = reads, tooltip = topic,
data_id = topic ) ) +
geom_bar_interactive(stat = "identity")
ggiraph(code = print(g))
g <- ggplot(df, aes(x = date, y = reads, tooltip = topic,
data_id = topic ) ) +
geom_bar_interactive(stat = "identity") +
labs(title = "Traffic to the Lab's Digital Literacy tips",
x = NULL, y = "Visits") +
theme_minimal()
ggiraph(code = print(g))
g <- ggplot(df, aes(x = date, y = reads, tooltip = topic,
data_id = topic ) ) +
geom_bar_interactive(stat = "identity") +
labs(title = "Traffic to the Lab's Digital Literacy Advent Calendar",
x = NULL, y = "Visits") +
theme_minimal()
ggiraph(code = print(g))
g <- ggplot(df, aes(x = date, y = reads, tooltip = topic,
data_id = topic ) ) +
geom_bar_interactive(stat = "identity") +
labs(title = "Traffic to the Lab's Digital Literacy Advent Calendar",
subtitle = "Reads per post on Talk Trafford"
x = NULL, y = "Visits") +
theme_minimal()
ggiraph(code = print(g))
g <- ggplot(df, aes(x = date, y = reads, tooltip = topic,
data_id = topic ) ) +
geom_bar_interactive(stat = "identity") +
labs(title = "Traffic to the Lab's Digital Literacy Advent Calendar",
subtitle = "Reads per post on Talk Trafford",
x = NULL, y = "Visits") +
theme_minimal()
ggiraph(code = print(g))
source("https://trafforddatalab.github.io/assets/theme/ggplot2/theme_lab.R")
df <- data_frame(
date = c(seq(as.Date('2018-12-03'), as.Date('2018-12-05'), by = 1)),
views = c(246, 100, 60),
topic = c("Search within a website using Google",
"Dodgy charts",
"Keyboard shortcuts")
)
g <- ggplot(df, aes(x = date, y = reads, tooltip = topic,
data_id = topic ) ) +
geom_bar_interactive(stat = "identity") +
labs(title = "Traffic to the Lab's Digital Literacy Advent Calendar",
subtitle = "Views per post on Talk Trafford",
x = NULL, y = "Views") +
theme_lab()
ggiraph(code = print(g))
g <- ggplot(df, aes(x = date, y = views, tooltip = topic,
data_id = topic ) ) +
geom_bar_interactive(stat = "identity") +
labs(title = "Traffic to the Lab's Digital Literacy Advent Calendar",
subtitle = "Views per post on Talk Trafford",
x = NULL, y = "Views") +
theme_lab()
ggiraph(code = print(g))
g <- ggplot(df, aes(x = date, y = views, tooltip = topic,
data_id = topic ) ) +
geom_bar_interactive(stat = "identity") +
labs(title = "Traffic to the Lab's Digital Literacy Advent Calendar",
subtitle = "Views per post on Talk Trafford",
x = NULL, y = "Views") +
theme_minimal()
ggiraph(code = print(g))
df <- data_frame(
date = c(seq(as.Date('2018-12-03'), as.Date('2018-12-07'), by = 1),
seq(as.Date('2018-12-10'), as.Date('2018-12-12'), by = 1)),
views = c(302, 177, 241, 167, 185, 179, 140, 154),
topic = c("Search within a website using Google",
"Dodgy charts",
"Keyboard shortcuts",
"Benefits of a text editor",
"The Wayback Machine",
"Capture a screenshot",
"Addressing email correctly",
"80/20 rule")
)
library(tidyverse) ; library(ggiraph)
df <- data_frame(
date = c(seq(as.Date('2018-12-03'), as.Date('2018-12-07'), by = 1),
seq(as.Date('2018-12-10'), as.Date('2018-12-12'), by = 1)),
views = c(302, 177, 241, 167, 185, 179, 140, 154),
topic = c("Search within a website using Google",
"Dodgy charts",
"Keyboard shortcuts",
"Benefits of a text editor",
"The Wayback Machine",
"Capture a screenshot",
"Addressing email correctly",
"80/20 rule")
)
g <- ggplot(df, aes(x = date, y = views, tooltip = topic, data_id = topic ) ) +
geom_bar_interactive(fill = "#b0b0b0", stat = "identity") +
labs(title = "Traffic to the Lab's Digital Literacy Advent Calendar",
subtitle = "Views per post on Talk Trafford",
x = NULL, y = NULL) +
theme_classic()
ggiraph(code = print(g))
setwd("~/Desktop/temp")
library(tidyverse) ; library(sf)
url <- "https://www.naturalearthdata.com/http//www.naturalearthdata.com/download/110m/cultural/ne_110m_admin_0_countries.zip"
download.file(url, dest = "ne_110m_admin_0_countries.zip")
unzip("ne_110m_admin_0_countries.zip", exdir = ".")
file.remove("ne_110m_admin_0_countries.zip")
st_read("ne_110m_admin_0_countries.shp") %>%
select(country = NAME,
country_code = ADM0_A3) %>%
filter(country != "Antarctica") %>%
st_centroid(.) %>%
cbind(st_coordinates(.)) %>% View()
st_read("ne_110m_admin_0_countries.shp") %>%
select(country = NAME,
country_code = ADM0_A3) %>%
filter(country != "Antarctica") %>%
st_centroid(.) %>%
cbind(st_coordinates(.)) %>%
rename(lon = X, lat = Y) %>% View()
st_read("ne_110m_admin_0_countries.shp") %>%
select(country = NAME,
country_code = ADM0_A3) %>%
filter(country != "Antarctica") %>%
st_centroid(.) %>%
cbind(st_coordinates(.)) %>%
rename(lon = X, lat = Y) %>%
st_write("countries.geojson")
setwd("~/Documents/GitHub/interactive_graphics_companion/data")
st_read("ne_110m_admin_0_countries.shp") %>%
select(country = NAME,
country_code = ADM0_A3) %>%
filter(country != "Antarctica") %>%
st_centroid(.) %>%
cbind(st_coordinates(.)) %>%
rename(lon = X, lat = Y) %>%
st_write("countries.geojson")
setwd("~/Documents/GitHub/interactive_graphics_companion/data")
library(tidyverse) ; library(sf)
url <- "https://www.naturalearthdata.com/http//www.naturalearthdata.com/download/110m/cultural/ne_110m_admin_0_countries.zip"
download.file(url, dest = "ne_110m_admin_0_countries.zip")
unzip("ne_110m_admin_0_countries.zip", exdir = ".")
file.remove("ne_110m_admin_0_countries.zip")
st_read("ne_110m_admin_0_countries.shp") %>%
select(country = NAME,
country_code = ADM0_A3) %>%
filter(country != "Antarctica") %>%
st_centroid(.) %>%
cbind(st_coordinates(.)) %>%
st_write("countries.geojson")
